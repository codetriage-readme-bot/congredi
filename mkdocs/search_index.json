{
    "docs": [
        {
            "location": "/", 
            "text": "Congredi \ntoxik.io/congredi/\n\n\n\n\nPeered Democratic Documents\n\n\nFor the static webclient written in JS, see \ndelegito.io\n\n\n\n\nCongredi\n is a python program that allows a community to help\nindividuals write changes to repositories of text, that are then\nvoted on by organizations to find a consensus.\n\n\nDesign ideas\n\n\nFunctionally speaking, it uses Twisted.amp to send packets, and runs some\ncrypto on them before performing actions on a redis/neo4j database.\n\n\nKeys are the hashes, Basically Accessible Soft state Eventual consistency,\ngit-diff style diffs, torrenting segments, AES/EC protos, STV from different\npapers on the subject.\n\n\nLooking for contributors!\n\n\nWhile I'm building this up, I'm looking for contributors!\nHead over to Waffle.io, issuehub.io, or CodeTriage :heart:.\n\n\nHere's some example \nissue tags\n.\n\n\nInstalling\n\n\n\n\nlibrary: \npip install congredi\n\n\ngit: \ngit clone https://github.com/thetoxicarcade/congredi.git \n cd congredi\n\n\ndocker:\n\n\n\n\nericoflondon/\n    congredi                - individual peer/clients\n    delegito                - static content, swarmable\n\n\n\n\nRunning\n\n\n\n\npython -m congredi.main.run peer --redis 6379 --neo4j 7474 --port 8800\n\n\npython -m congredi.main.run client --host localhost --port 8800\n\n\n\n\nProjects I'm still looking at:\nhttps://github.com/twisted/vertex\nhttps://github.com/indigo-dc/udocker\n    pull docker containers, decompress, run in PRoot/chroot?\nhttps://github.com/jamercee/signet\n    sign python and use loader to run\nhttps://github.com/bnlucas/python-basehash\n    encrypted hashing\nhttps://github.com/rw/plainsight\nhttps://github.com/JarrodCTaylor/steganopy\n    steganography\nhttps://github.com/barseghyanartur/ska\n    - signed (symetric then HMACed)\nhttps://github.com/WhisperSystems/libsignal-protocol-javascript\nhttps://whispersystems.org/docs/specifications/xeddsa/\nhttps://whispersystems.org/docs/specifications/x3dh/\nhttps://whispersystems.org/docs/specifications/doubleratchet/\n    ratchet", 
            "title": "index"
        }, 
        {
            "location": "/#congredi-toxikiocongredi", 
            "text": "Peered Democratic Documents  For the static webclient written in JS, see  delegito.io   Congredi  is a python program that allows a community to help\nindividuals write changes to repositories of text, that are then\nvoted on by organizations to find a consensus.", 
            "title": "Congredi toxik.io/congredi/"
        }, 
        {
            "location": "/#design-ideas", 
            "text": "Functionally speaking, it uses Twisted.amp to send packets, and runs some\ncrypto on them before performing actions on a redis/neo4j database.  Keys are the hashes, Basically Accessible Soft state Eventual consistency,\ngit-diff style diffs, torrenting segments, AES/EC protos, STV from different\npapers on the subject.", 
            "title": "Design ideas"
        }, 
        {
            "location": "/#looking-for-contributors", 
            "text": "While I'm building this up, I'm looking for contributors!\nHead over to Waffle.io, issuehub.io, or CodeTriage :heart:.  Here's some example  issue tags .", 
            "title": "Looking for contributors!"
        }, 
        {
            "location": "/#installing", 
            "text": "library:  pip install congredi  git:  git clone https://github.com/thetoxicarcade/congredi.git   cd congredi  docker:   ericoflondon/\n    congredi                - individual peer/clients\n    delegito                - static content, swarmable", 
            "title": "Installing"
        }, 
        {
            "location": "/#running", 
            "text": "python -m congredi.main.run peer --redis 6379 --neo4j 7474 --port 8800  python -m congredi.main.run client --host localhost --port 8800   Projects I'm still looking at:\nhttps://github.com/twisted/vertex\nhttps://github.com/indigo-dc/udocker\n    pull docker containers, decompress, run in PRoot/chroot?\nhttps://github.com/jamercee/signet\n    sign python and use loader to run\nhttps://github.com/bnlucas/python-basehash\n    encrypted hashing\nhttps://github.com/rw/plainsight\nhttps://github.com/JarrodCTaylor/steganopy\n    steganography\nhttps://github.com/barseghyanartur/ska\n    - signed (symetric then HMACed)\nhttps://github.com/WhisperSystems/libsignal-protocol-javascript\nhttps://whispersystems.org/docs/specifications/xeddsa/\nhttps://whispersystems.org/docs/specifications/x3dh/\nhttps://whispersystems.org/docs/specifications/doubleratchet/\n    ratchet", 
            "title": "Running"
        }, 
        {
            "location": "/contributing/intro/", 
            "text": "Get Involved\n\n\n\n\nHop on Waffle to view the current GitHub issues:\n    \n.\n\n\nClone repo:\n    \ngit clone github.com/thetoxicarcade/congredi \n cd congredi\n\n\npre-fetch npm/bower, gulp\n\n\ndocker run -ti --rm -u $UID -v `pwd`/interface/:/srv/ marmelab/bower bash -c \"npm install \n bower --allow-root --config.interactive install\"\n\n\ndocker run -ti --rm -u $UID -v `pwd`/interface/:/srv/ marmelab/bower bash -c \"npm install -g gulp \n gulp\"\n\n*\n\n\n\n\n\n\nHack some things\n\n\nsetup.py build test install\n\n\nsetup.py metadata sdist upload\n\n\ndocker-compose build \n docker-compose up -d \n docker-compose scale workers=2\n\n\n\n\n\n\nSubmit some pull requests\n\n\n\n\nThis repo handles letting anonymous people reach compromises. Unfortunately the \ncodebase doesn't extend to github comments. Don't be any form of oppressive or\nslandarous towards another person or group.\n\n\nExplaining an endpoint allows other people to use it correctly. If the\ndocs won't match the code anymore, change them too. Use markdown code\nblocks for snippets, when in doubt run \nmkdocs serve\n to try them out.\n\n\nBefore submitting your changes, run \nsetup.py test\n \n/|| \ndocker-compose build\n,\njust to see that everything superficially checks out. If you'd made changes\noutside the scope of the tests, it might not register as failing, but it's\na good, basic step. The testing system currently uses \nnose2\n \n \njasmine\n.\n\n\nInsofar as the editor you use can format, and the test suite used can lint it.\nCurrently, that's \neslint\n \n \npylint\n (\npython setup.py lint\n).\nIn other words, if the machines can both catch and help you, style it that way.", 
            "title": "intro"
        }, 
        {
            "location": "/contributing/intro/#get-involved", 
            "text": "Hop on Waffle to view the current GitHub issues:\n     .  Clone repo:\n     git clone github.com/thetoxicarcade/congredi   cd congredi  pre-fetch npm/bower, gulp  docker run -ti --rm -u $UID -v `pwd`/interface/:/srv/ marmelab/bower bash -c \"npm install   bower --allow-root --config.interactive install\"  docker run -ti --rm -u $UID -v `pwd`/interface/:/srv/ marmelab/bower bash -c \"npm install -g gulp   gulp\" \n*    Hack some things  setup.py build test install  setup.py metadata sdist upload  docker-compose build   docker-compose up -d   docker-compose scale workers=2    Submit some pull requests   This repo handles letting anonymous people reach compromises. Unfortunately the \ncodebase doesn't extend to github comments. Don't be any form of oppressive or\nslandarous towards another person or group.  Explaining an endpoint allows other people to use it correctly. If the\ndocs won't match the code anymore, change them too. Use markdown code\nblocks for snippets, when in doubt run  mkdocs serve  to try them out.  Before submitting your changes, run  setup.py test   /||  docker-compose build ,\njust to see that everything superficially checks out. If you'd made changes\noutside the scope of the tests, it might not register as failing, but it's\na good, basic step. The testing system currently uses  nose2     jasmine .  Insofar as the editor you use can format, and the test suite used can lint it.\nCurrently, that's  eslint     pylint  ( python setup.py lint ).\nIn other words, if the machines can both catch and help you, style it that way.", 
            "title": "Get Involved"
        }, 
        {
            "location": "/contributing/style/", 
            "text": "Style guides\n\n\nI'm not currently conforming to the results\nfrom \neslint\n or \npylint\n, but I could be.\n\n\nPython\n\n\nPep8 via autopep8. Note that I come from a lovely tabs world, so\nI just suggest installing \ncheck.sh\n into your git hooks.\n\n\nJS\n\n\nsingle-quote, tab, 1tbs camelCase", 
            "title": "style"
        }, 
        {
            "location": "/contributing/style/#style-guides", 
            "text": "I'm not currently conforming to the results\nfrom  eslint  or  pylint , but I could be.", 
            "title": "Style guides"
        }, 
        {
            "location": "/contributing/style/#python", 
            "text": "Pep8 via autopep8. Note that I come from a lovely tabs world, so\nI just suggest installing  check.sh  into your git hooks.", 
            "title": "Python"
        }, 
        {
            "location": "/contributing/style/#js", 
            "text": "single-quote, tab, 1tbs camelCase", 
            "title": "JS"
        }, 
        {
            "location": "/contributing/tests/", 
            "text": "CI / Unit Tests\n\n\nTravis runs compilation, unit tests, a docker assembly, \n mkdocs builds.\n\n\nNose2 - \ntest directory\n\n\nby-file/library tests, \ntest_flask.py\n -\n \napi.py\n for instance.\n\n\nJasmine - \ntest directory\n\n\nby-file/library tests, \ndemo.js\n -\n \napp.js\n for instance.", 
            "title": "tests"
        }, 
        {
            "location": "/contributing/tests/#ci-unit-tests", 
            "text": "Travis runs compilation, unit tests, a docker assembly,   mkdocs builds.", 
            "title": "CI / Unit Tests"
        }, 
        {
            "location": "/contributing/tests/#nose2-test-directory", 
            "text": "by-file/library tests,  test_flask.py  -   api.py  for instance.", 
            "title": "Nose2 - test directory"
        }, 
        {
            "location": "/contributing/tests/#jasmine-test-directory", 
            "text": "by-file/library tests,  demo.js  -   app.js  for instance.", 
            "title": "Jasmine - test directory"
        }, 
        {
            "location": "/contributing/commits/", 
            "text": "Commits (from Atom/Contributing)\n\n\n\n\nPresent Tense, Imperative mood \nrun\n \nnot\n \nran/runs\n\n\nprefixes (use emojis! :sunglasses:)\n\n\n\n\n(finally) Submitting Changes\n\n\n\n\nCreate (or finish creating) an issue referencing what needs to change.\n\n\nStart your pull request (on your honor it's your own code).\n\n\nIf the build, documentation, or testing need changes, alert us to them.", 
            "title": "commits"
        }, 
        {
            "location": "/contributing/commits/#commits-from-atomcontributing", 
            "text": "Present Tense, Imperative mood  run   not   ran/runs  prefixes (use emojis! :sunglasses:)", 
            "title": "Commits (from Atom/Contributing)"
        }, 
        {
            "location": "/contributing/commits/#finally-submitting-changes", 
            "text": "Create (or finish creating) an issue referencing what needs to change.  Start your pull request (on your honor it's your own code).  If the build, documentation, or testing need changes, alert us to them.", 
            "title": "(finally) Submitting Changes"
        }, 
        {
            "location": "/contributing/tags/", 
            "text": "Waffle / Github allows us to have labels to report progress about things.\nThese are the labels I can think of, and where they lie on the spectrum.\n\n\nYou also might want to check out the emoji examples for context, over\nat \n//github.com/thetoxicarcade/congredi\n.\n\n\nhelp wanted\n\n\nSections where nobody's claimed something. If you assigned yourself to an\nissue, you can remove the \nhelp wanted\n label.\n\n\nfirst-pr / easy pick / beginner \n:heart:\n\n\nSmall problems I shouldn't be focusing on but need fixing eventually.\n\n\nExample: \nsetup.py doesn't correctly generate an RST for PyPi\n\n\ntougher \n:octocat:\n\n\nBig problems I don't know how to approach exactly.\n\n\nExample: \nlistenTCP(0) won't work on korora. Possibly a firewall issue?\n\n\nthe little things\n\n\nbug \ntrivial - :bug: critical - :ambulance:\n\n\nAn error in the expected behavior of the application. Can be patched within \n_._.x\n.\n\n\nExample: \nrunning congredi in python3 - buffer objects not supported\n\n\ntrivial \n:microsope:\n\n\nSmall feature fixes. Patched at \n_._.x\n.\n\n\nExample: \nDocker image size improvements.\n\n\nfeature \n:stars:\n\n\nNew functionality. Can be patched within \n_.x.x\n.\n\n\nExample: \nOAEP within congredi's packets\n\n\nenhancement \n:telescope:\n\n\nImproved functionality. Pached at \n_.x.x\n.\n\n\nExample: \nUse Pycrypto over Cryptography.\n\n\nthe big picture\n\n\ntests \n:warning:\n\n\nAdding tests to cover scenarios.\n\n\nExample: \nRequire implementer to fail if command is invalid.\n\n\ndesign \n:tophat:\n\n\nmockups, interfaces, structuring.\n\n\nExample: \nGit Unified-diff recursion demo.py\n\n\ndocumentation \n:books:\n\n\ntrying things out (a bit of QA), explaining code\n\n\nExample: \nThe 'MONITOR' command.\n\n\nrefactoring \nbeauty - :art: clutter - :fire:\n\n\nIncrease quality without changing functionality\n\n\nExample: \nunify two classes with a superclass\n\n\nMachine labels\n\n\nLabels useful to us, but automatic to the platform.\n\n\nin progress / ready\n\n\nLabels used by waffle board\n\n\nduplicate / invalid / question / wontfix\n\n\nLabels useful to github", 
            "title": "Tags/Emoji"
        }, 
        {
            "location": "/contributing/tags/#help-wanted", 
            "text": "Sections where nobody's claimed something. If you assigned yourself to an\nissue, you can remove the  help wanted  label.", 
            "title": "help wanted"
        }, 
        {
            "location": "/contributing/tags/#first-pr-easy-pick-beginner-heart", 
            "text": "Small problems I shouldn't be focusing on but need fixing eventually.  Example:  setup.py doesn't correctly generate an RST for PyPi", 
            "title": "first-pr / easy pick / beginner :heart:"
        }, 
        {
            "location": "/contributing/tags/#tougher-octocat", 
            "text": "Big problems I don't know how to approach exactly.  Example:  listenTCP(0) won't work on korora. Possibly a firewall issue?", 
            "title": "tougher :octocat:"
        }, 
        {
            "location": "/contributing/tags/#the-little-things", 
            "text": "", 
            "title": "the little things"
        }, 
        {
            "location": "/contributing/tags/#bug-trivial-bug-critical-ambulance", 
            "text": "An error in the expected behavior of the application. Can be patched within  _._.x .  Example:  running congredi in python3 - buffer objects not supported", 
            "title": "bug trivial - :bug: critical - :ambulance:"
        }, 
        {
            "location": "/contributing/tags/#trivial-microsope", 
            "text": "Small feature fixes. Patched at  _._.x .  Example:  Docker image size improvements.", 
            "title": "trivial :microsope:"
        }, 
        {
            "location": "/contributing/tags/#feature-stars", 
            "text": "New functionality. Can be patched within  _.x.x .  Example:  OAEP within congredi's packets", 
            "title": "feature :stars:"
        }, 
        {
            "location": "/contributing/tags/#enhancement-telescope", 
            "text": "Improved functionality. Pached at  _.x.x .  Example:  Use Pycrypto over Cryptography.", 
            "title": "enhancement :telescope:"
        }, 
        {
            "location": "/contributing/tags/#the-big-picture", 
            "text": "", 
            "title": "the big picture"
        }, 
        {
            "location": "/contributing/tags/#tests-warning", 
            "text": "Adding tests to cover scenarios.  Example:  Require implementer to fail if command is invalid.", 
            "title": "tests :warning:"
        }, 
        {
            "location": "/contributing/tags/#design-tophat", 
            "text": "mockups, interfaces, structuring.  Example:  Git Unified-diff recursion demo.py", 
            "title": "design :tophat:"
        }, 
        {
            "location": "/contributing/tags/#documentation-books", 
            "text": "trying things out (a bit of QA), explaining code  Example:  The 'MONITOR' command.", 
            "title": "documentation :books:"
        }, 
        {
            "location": "/contributing/tags/#refactoring-beauty-art-clutter-fire", 
            "text": "Increase quality without changing functionality  Example:  unify two classes with a superclass", 
            "title": "refactoring beauty - :art: clutter - :fire:"
        }, 
        {
            "location": "/contributing/tags/#machine-labels", 
            "text": "Labels useful to us, but automatic to the platform.", 
            "title": "Machine labels"
        }, 
        {
            "location": "/contributing/tags/#in-progress-ready", 
            "text": "Labels used by waffle board", 
            "title": "in progress / ready"
        }, 
        {
            "location": "/contributing/tags/#duplicate-invalid-question-wontfix", 
            "text": "Labels useful to github", 
            "title": "duplicate / invalid / question / wontfix"
        }, 
        {
            "location": "/extending/angular/", 
            "text": "Extending / Scaling / UI-ing\n\n\nCongredi has no workable client. To make one, you might try:\n\n\n\n\nTraefik with docker-swarm serving docker containers\n\n\nnginx-served angular app (jwt, openpgp)\n\n\n\n\nAngular UI designs\n\n\n\n\nThink Hoodiecrow/mailvelope/whiteout-io/mailpile\n\n\n\n\n# .when('/settings' etc\n/#/self/settings\n/#/node/admin\n/#/search\n/#/edit\n/#/vote\n\n/api/search?offset=0?limit=0\n/api/auth/jwt\n/api/docs/new\n/api/docs/:id/edit\n/api/vote/new\n/api/vote/:id/cast\n/api/orgs/new\n/api/orgs/:id/\n\n\n\n\nEdits to Angular UI js\n\n\n\n\nrun \ngulp clean\n\n\nmake edits to \n/js/\n\n\nif you change a library call, change its \n.test.js\n\n\nif you change a controller or otherwise, change its \nview\n\n\n\n\n\n\nrun \ngulp\n (should run tests as well)", 
            "title": "angular"
        }, 
        {
            "location": "/extending/angular/#extending-scaling-ui-ing", 
            "text": "Congredi has no workable client. To make one, you might try:   Traefik with docker-swarm serving docker containers  nginx-served angular app (jwt, openpgp)", 
            "title": "Extending / Scaling / UI-ing"
        }, 
        {
            "location": "/extending/angular/#angular-ui-designs", 
            "text": "Think Hoodiecrow/mailvelope/whiteout-io/mailpile   # .when('/settings' etc\n/#/self/settings\n/#/node/admin\n/#/search\n/#/edit\n/#/vote\n\n/api/search?offset=0?limit=0\n/api/auth/jwt\n/api/docs/new\n/api/docs/:id/edit\n/api/vote/new\n/api/vote/:id/cast\n/api/orgs/new\n/api/orgs/:id/", 
            "title": "Angular UI designs"
        }, 
        {
            "location": "/extending/angular/#edits-to-angular-ui-js", 
            "text": "run  gulp clean  make edits to  /js/  if you change a library call, change its  .test.js  if you change a controller or otherwise, change its  view    run  gulp  (should run tests as well)", 
            "title": "Edits to Angular UI js"
        }, 
        {
            "location": "/extending/database/", 
            "text": "twisted nodes\n\n\nredis nodes / api key to hosted redis\n\n\nneo4j nodes / api key to hosted neo4j\n\n\n\n\ndocker run -it -d -p 4400:4400 --name=\"actions\" --restart=\"always\" -v $(pwd):/root ericoflondon/congredi\ndocker --verbose build --tag ide .\npython main/amp.py\npython -m congredi\npython -m congredi peer", 
            "title": "database"
        }, 
        {
            "location": "/spec/commands/", 
            "text": "Design Problems\n\n\nPUBLISH, DEPLOY, SUBSCRIBE, MONITOR, PAST, CURRENT, FUTURE, SEARCH\n\n\nCongredi uses three classes of operations, unprivledged local,\nprivledged global, and privledged recursion.\n\n\nOperations like \nDEPLOY\n and \nMONITOR\n need no permissions but\nonly ask about that local node, and don't have a guarentee of\npersisting on it. If more important things need to be stored,\nthese ones will be removed first.\n\n\nOperations like \nPUBLISH\n and \nSUBSCRIBE\n, however, use the\nnode's time and resources to ask around for things, and deploy\ntheir results to multiple servers to get the word around.\n\n\nFinally, operations like \nPAST\n \nCURRENT\n \nFUTURE\n and \nSEARCH\n\nare dependant on having the full list of objects, and operate\nby trying to split the work among other nodes.\n\n\nBlobs will probably be zlib compressed ndiffs, even if I want them to be\nunified diffs.\n\n\nExample Operations:\n\n\nMONITOR CACHE foobar HAS : \n\n\nDEPLOY CACHE foobar HAS \n\n\n'SET'\n    PUBLISH - permissions, long lasting item\n    DEPLOY - no permissions, publish key, may soon be deleted\n\n'GET'\n    SUBSCRIBE - permissions set rendesvous to pull updates\n    MONITOR - no permissions, query for key, request expires\n\n    PAST - grab all previous versions\n    CURRENT - grab signed latest\n    FUTURE - grab all newer versions\n\nSEARCH \n ORDER \n OFFSET \n COUNT \n TERM", 
            "title": "Design"
        }, 
        {
            "location": "/spec/commands/#design-problems", 
            "text": "PUBLISH, DEPLOY, SUBSCRIBE, MONITOR, PAST, CURRENT, FUTURE, SEARCH  Congredi uses three classes of operations, unprivledged local,\nprivledged global, and privledged recursion.  Operations like  DEPLOY  and  MONITOR  need no permissions but\nonly ask about that local node, and don't have a guarentee of\npersisting on it. If more important things need to be stored,\nthese ones will be removed first.  Operations like  PUBLISH  and  SUBSCRIBE , however, use the\nnode's time and resources to ask around for things, and deploy\ntheir results to multiple servers to get the word around.  Finally, operations like  PAST   CURRENT   FUTURE  and  SEARCH \nare dependant on having the full list of objects, and operate\nby trying to split the work among other nodes.  Blobs will probably be zlib compressed ndiffs, even if I want them to be\nunified diffs.  Example Operations:  MONITOR CACHE foobar HAS :   DEPLOY CACHE foobar HAS   'SET'\n    PUBLISH - permissions, long lasting item\n    DEPLOY - no permissions, publish key, may soon be deleted\n\n'GET'\n    SUBSCRIBE - permissions set rendesvous to pull updates\n    MONITOR - no permissions, query for key, request expires\n\n    PAST - grab all previous versions\n    CURRENT - grab signed latest\n    FUTURE - grab all newer versions\n\nSEARCH   ORDER   OFFSET   COUNT   TERM", 
            "title": "Design Problems"
        }, 
        {
            "location": "/spec/commands/idx/current/", 
            "text": "CURRENT\n\n\n\n\nCheck the info we have\n\n\nCheck where we got it from\n\n\nCheck our peers\n\n\nReturn our results", 
            "title": "current"
        }, 
        {
            "location": "/spec/commands/idx/current/#current", 
            "text": "Check the info we have  Check where we got it from  Check our peers  Return our results", 
            "title": "CURRENT"
        }, 
        {
            "location": "/spec/commands/idx/future/", 
            "text": "FUTURE\n\n\nSame as above", 
            "title": "future"
        }, 
        {
            "location": "/spec/commands/idx/future/#future", 
            "text": "Same as above", 
            "title": "FUTURE"
        }, 
        {
            "location": "/spec/commands/idx/past/", 
            "text": "PAST\n\n\n\n\nCheck the user permissions\n\n\nCheck all the info we have, send this to peers to help them\n\n\nTry to get to a null-beginning hash of the tree\n\n\nProve that the content lines up end to end\n\n\nReturn the content", 
            "title": "past"
        }, 
        {
            "location": "/spec/commands/idx/past/#past", 
            "text": "Check the user permissions  Check all the info we have, send this to peers to help them  Try to get to a null-beginning hash of the tree  Prove that the content lines up end to end  Return the content", 
            "title": "PAST"
        }, 
        {
            "location": "/spec/commands/idx/search/", 
            "text": "SEARCH\n\n\nSEARCH \n ORDER \n OFFSET \n COUNT \n TERM \n\n1. if we have the full diff, search it\n2. if we don't, request PAST/FUTURE queries\n3. return ranked results", 
            "title": "search"
        }, 
        {
            "location": "/spec/commands/idx/search/#search", 
            "text": "SEARCH   ORDER   OFFSET   COUNT   TERM  \n1. if we have the full diff, search it\n2. if we don't, request PAST/FUTURE queries\n3. return ranked results", 
            "title": "SEARCH"
        }, 
        {
            "location": "/spec/commands/rw/publish/", 
            "text": "PUBLISH - privledged set\n\n\nPUBLISH IDENTITY USER \nkey\npreviousfingerprint\nsigbyprevious\n\nDifferences:\n2. Fail if we don't have the key, publish operations are privledged,\n    Ask for permission before using them!\n2.5. Check if a trust-path exists from this node's users to that key. ErrBack.", 
            "title": "publish"
        }, 
        {
            "location": "/spec/commands/rw/publish/#publish-privledged-set", 
            "text": "PUBLISH IDENTITY USER  key previousfingerprint sigbyprevious \nDifferences:\n2. Fail if we don't have the key, publish operations are privledged,\n    Ask for permission before using them!\n2.5. Check if a trust-path exists from this node's users to that key. ErrBack.", 
            "title": "PUBLISH - privledged set"
        }, 
        {
            "location": "/spec/commands/rw/deploy/", 
            "text": "DEPLOY - unprivledged set\n\n\nDEPLOY IDENTITY USER \nkey\npreviousfingerprint\nsigbyprevious\n\n1. Check validity of sig against given key.\n2. Request previous key if we don't have it.\n3. Add previous key, new key, and query proof to DB, expire (lim)\n4. Return certification that it'll be in there, barring space considerations.", 
            "title": "deploy"
        }, 
        {
            "location": "/spec/commands/rw/deploy/#deploy-unprivledged-set", 
            "text": "DEPLOY IDENTITY USER  key previousfingerprint sigbyprevious \n1. Check validity of sig against given key.\n2. Request previous key if we don't have it.\n3. Add previous key, new key, and query proof to DB, expire (lim)\n4. Return certification that it'll be in there, barring space considerations.", 
            "title": "DEPLOY - unprivledged set"
        }, 
        {
            "location": "/spec/commands/rw/subscribe/", 
            "text": "SUBSCRIBE - privledged get\n\n\n\n\nCheck what we know about it\n\n\nCheck what peers know about it\n\n\nReturn results, and where we got it from\n\n\nUpdate their rendesvous peers if they want to know more", 
            "title": "subscribe"
        }, 
        {
            "location": "/spec/commands/rw/subscribe/#subscribe-privledged-get", 
            "text": "Check what we know about it  Check what peers know about it  Return results, and where we got it from  Update their rendesvous peers if they want to know more", 
            "title": "SUBSCRIBE - privledged get"
        }, 
        {
            "location": "/spec/commands/rw/monitor/", 
            "text": "MONITOR - unprivledged get\n\n\nMONITOR CACHE \nhash\n WANTS\n\n\n\n\nCheck that we know about the hash\n\n\nReturn results\n\n\ninclude where we got it from so they can do their research", 
            "title": "monitor"
        }, 
        {
            "location": "/spec/commands/rw/monitor/#monitor-unprivledged-get", 
            "text": "MONITOR CACHE  hash  WANTS   Check that we know about the hash  Return results  include where we got it from so they can do their research", 
            "title": "MONITOR - unprivledged get"
        }
    ]
}